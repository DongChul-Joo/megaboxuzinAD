<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="roto">
	
	<sql id="where-list">
		<if test="condition=='all'">
			( INSTR(subject, #{keyword}) &gt; 0
				OR INSTR(content, #{keyword}) &gt; 0 )
		</if>
		<if test="condition=='subject'">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content'">
			INSTR(content, #{keyword}) &gt; 0 
		</if>
		<if test="condition=='created'">
			( TO_CHAR(created, 'YYYY-MM-DD') = #{keyword}
				OR TO_CHAR(created, 'YYYYMMDD') = #{keyword})
		</if>
		
	</sql>
	
	<!-- 분류 코드 등록 -->
	<select id="listCategory" resultType="com.zinsupark.roto.Roto">
		SELECT eCategoryCode, eCategoryName 
		FROM eventCategory
	</select>
	
	<!-- 데이터 개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM event e
		JOIN member m ON e.userId=m.userId
		<where>
		    lott = 1
			<if test="ecategoryCode!=0">
				 AND ecategoryCode = #{ecategoryCode}
			</if>
			<if test="keyword != null and keyword != ''">
				AND <include refid="where-list"/>
			</if>
		</where>		
	</select>
	
	<!-- 리스트 출력 -->
	<select id="listRoto" parameterType="map" resultType="com.zinsupark.roto.Roto">
		SELECT e.ecode, e.userId, TO_CHAR(sdate, 'yyyy-mm-dd') as sdate, TO_CHAR(edate, 'yyyy-mm-dd') as edate,
		TO_CHAR(lottDate, 'yyyy-mm-dd') as lottDate, subject, lott, mCount, ecategoryName, pubDate
		FROM event e
		JOIN eventcategory c ON e.ecategoryCode = c.ecategoryCode
		JOIN member m ON e.userId=m.userId
		LEFT OUTER JOIN eventroto er ON e.ecode = er.ecode
		<where>
			lott = 1
			<if test="ecategoryCode!=0">
				AND ecategoryCode = #{ecategoryCode}
			</if>
			<if test="keyword != null and keyword != ''">
				AND <include refid="where-list"/>
			</if>
		</where>
		ORDER BY e.ecode DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<!-- 글 보기 -->
	<select id="readRoto" parameterType="Integer" resultType="com.zinsupark.roto.Roto">
		SELECT ecode, e.userId, content
		FROM eventroto e
		JOIN member m ON e.userId=m.userId
		WHERE ecode=#{ecode}
	</select>
	
	<!-- 글 넣기 -->
	<insert id="insertRoto" parameterType="com.zinsupark.roto.Roto">
		INSERT INTO eventroto(ecode, userId, content)
		VALUES ( #{ecode}, #{userId}, #{content})
	</insert>
	
	<!-- 이벤트 당첨자 만들기 -->
	<select id="listRequestPick" parameterType="map" resultType="com.zinsupark.roto.Roto">
		SELECT tb.* FROM (
		     SELECT ecode, userId FROM eventrequest
		     WHERE ecode = #{ecode}
		     ORDER BY DBMS_RANDOM.VALUE
		) tb WHERE ROWNUM &lt;= 5
	</select>
	
	
	<!-- 이벤트 당첨자 수 -->
	<select id="eventPickCount" parameterType="map" resultType="Integer">
		     SELECT COUNT(*) FROM eventPic
		     WHERE ecode = #{ecode}
	</select>

	<!-- 이벤트 당첨자 리스트 출력 -->
	<select id="listEventPic" parameterType="map" resultType="com.zinsupark.roto.Roto">
		     SELECT e1.ecode, e1.userId, c.userName, e2.subject, c.tel, c.email
             FROM eventPic e1
             JOIN event e2 ON e1.ecode=e2.ecode
             JOIN member m ON e1.userId=m.userId
             JOIN CUSTOMER c ON m.customerCode = c.customerCode
		     WHERE e1.ecode = #{ecode}
	</select>
	
	<!-- 당첨자 저장 -->
	<insert id="insertEventPic" parameterType="map">
	   INSERT INTO eventPic(ecode, userId)
	   VALUES(#{ecode}, #{userId})
	</insert>
	
</mapper>